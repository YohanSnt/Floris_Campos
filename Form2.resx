<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctMenu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABQ0SURBVHhe7d1Z
        rK5nWcbxDlRUECOT2BRwFhFNNB5AEU5EIATQGCCQGCIkNhiiqGnEgwaIilPogUJAaKJhEuQATEFSyujE
        kBBtNEEiiBgGmSsFakuher0JCC3P7l57P9/w3u/9+ye/83d9a3Wv63m61rfOkSRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkhp1r/i5eHo8P/46rol/j0/G9fHZ+MxX/Ee8
        PV4Tz41fj4fE3UOSJK2wc+PH4tJ4fSzf4P93hz4ar4hL4vtDkiQdqeWb/gPjebF8gx59496X98Zvx/1C
        kiQdoO+MZ8YHY/TN+dD+OZ4SdwhJkrTjliv+F8cNMfpGfGzXxuVxYUiSpMm+O14YX4rRN961uTGW571H
        SJKkM+w74gVxU4y+0a7d5+K34oKQJEkn6LHxsRh9Y63m32L5dUJJknSKlt/dvypG30gruzmuiDuFJEn6
        upZT//KGPKNvoFux/Lrio0KSpPZ9V1wZo2+YW/WqWH7GQZKklnU49Z+K2wBJUrs6nvpPxW2AJKlFnU/9
        p+I2QJK02Zz6T89tgCRpUzn1n5zbAElS+Zz6z57bAElSyZz657kNkCSVyal/99wGSJJWnVP//rgNkCSt
        Lqf+w3EbIElaRU79h+c2QJJ0tJz6j89tgCTpoDn1r4fbAEnS3nPqXy+3AZKkveTUv35uAyRJO8upvx63
        AZKkqZz663IbIEk645z6t8NtgCTpRDn1b4/bAEnSKXPq3z63AZKkW+TU34fbAEmSU39jbgMkqWlO/Sy3
        AY8OSVKDnPq5teU24M4hSdpoTv2citsASdpgTv2clNsASdpITv2cKbcBklS4C+O1MfoHHk7CbYAkFcup
        n11xGyBJBXLqZ1/cBkjSSnPqZ9/cBkjSinLq59DcBkjSkXPq51jcBkjSEXLqZy3cBkjSgXLqZ23cBkjS
        HnPqZ+3cBkjSjnPqpwq3AZK0g5z6qcptgCSdRefGE8Opn8rcBkjSGXTvuDpG/6BCRW4DJOk2Wk79l8Rn
        Y/SPKFTmNkCSBjn104XbAElKTv105DZAUuuc+unObYCkVjn1w9e4DZDUIqd+GHMbIGmTOfXD6bkNkLSp
        llP/G2P0Dx7wjdwGSCrdV0/918XoHzng1NwGSCqZUz/shtsASSVy6ofdcxsgadU59cN+uQ2QtKqc+uFw
        3AZIWkVO/XAcbgMkHSWnfjg+twGSDppTP6yL2wBJe82pH9bLbYCkveTUDzW4DZC0k5z6oR63AZKmcuqH
        2twGSDqjnPphO9wGSDpRTv2wTW4DJA1z6oftcxsg6RY59UMvbgOk5jn1Q19uA6SmOfUDC7cBUpOc+oFb
        cxsgbTynfuC2uA2QNpZTP3BSbgOkjeTUD5wNtwFS0Zz6gVluA6RiOfUDu+Q2QFp5Tv3AvrgNkFaaUz9w
        CG4DpJXk1A8cmtsA6cg59QPH5DZAOnBO/cBauA2QDpRTP7BGbgOkPeXUD6yd2wBpxzn1A5W4DZAmc+oH
        qnIbIJ1lTv3AFrgNkE6YUz+wNW4DpNPk1A9smdsA6VY59QNduA2QvpJTP9CR2wC1zakf6M5tgNrl1A/w
        NW4DtPmc+gHG3AZoszn1A5ye2wBtJqd+gDPjNkDlc+oHOHtuA1Qup36A3XAboDI59QPsntsArTanfoD9
        chug1eXUD3A4bgN09Jz6AY7DbYCOllM/wPG5DdDBcuoHWBe3Adp7Tv0A6+U2QDvPqR+gBrcB2llO/QD1
        uA3QWefUD1Cb2wCdcU79ANvhNkCnzakfYJvcBuiUOfUDbJ/bAP1/Tv0AvbgNkFM/QGNuAxrm1A/Awm1A
        o5z6Abg1twEbzqkfgNviNmCDOfUDcFJuAzaQUz8AZ8NtQOGc+gGY5TagUE79AOyS24ACOfUDsC9uA1aY
        Uz8Ah+A2YEU59QNwaG4DjphTPwDH5DbgCDn1A7AWbgMOkFM/AGvkNmCPOfUDsHZuA3aYUz8AlbgN2EFO
        /QBU5TbgLHLqB2AL3AacQReFUz8AW3FzvCjuEDpFPx+fitELCACVfSAuDn1dt4s/idELBgBbcWM8JZTu
        Gm+J0QsFAFv0p/FN0bblp/zfG6MXBwC27M3xbdGuH4kPx+hFAYAO3hGtflXwB+O/YvRiAEAn10SLEfB9
        8ZEYvQgA0NFyE7Dp/x2w/MDf+2P0wQNAZ1fF8ltxm2v5aUc/7Q8Ap3ZFbK4/i9EHCwB8zabeJ+AJMfog
        AYBbuiF+Isp3n/h8jD5IAOAbvS9K/1DgefH3MfrgAIBTe36U7dIYfVAAwG1b/orgQ6Jc94wvxOiDAgBO
        b3m7/AuiVH8Row8GADi534gy3T+Wq4vRBwIAnNy1sbyRXomujtEHAQCcuWfH6ntAjB4eADg7n4vV3wK8
        LkYPDwCcvWfEalv+0t+XY/TgAMDZ+2gsf1dnlV0eo4cGAOY9PlbX8icMPx6jBwYA5r0hVtcjYvSwAMBu
        fCnuEavqpTF6WABgd34lVtP58akYPSgAsDvLe+2spotj9JAAwG7dEHeMVfSsGD0kALB7j4xV9KYYPSAA
        sHu/F0fvvPhsjB4QANi9t8bRu2+MHg4A2I/r4tw4ao+J0cMBAPtzrzhql8XowQCA/XloHLU/j9GDAQD7
        89Q4alfF6MEAgP35nThq18TowQCA/bkijtqHYvRgAMD+/FUcNX8DAAAOb/lf8Eft8zF6MABgf94WR+3G
        GD0YALA/74ijZgAAwOEZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0Z
        AADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEA
        AA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQ
        kAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0Z
        AADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEA
        AA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQ
        kAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0Z
        AADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEA
        AA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQ
        kAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAADQkAEAAA0ZAFDER+Mt8fJ4Yfxh/AHnPCeW
        1+Mv453xmRi9fsAtGQCwQst/F2+LZ8aD406hk3e3eGRcHv8YX47R6wydGQCwIu+Op8XyDUy766JYXtdr
        YvS6Q0cGABzZcjp9bfxkaP/9VCyv9+hzAZ0YAHBEr44fCB2+B8Vy4zL6vEAHBgAcwfvjEaHjdn48Na6N
        0ecJtswAgAN7SdwxtJ6WnxH4uxh9vmCrDAA4kOvjF0Pr7Hax/FrhzTH6/MHWGABwAMsV8/LDZ1p/T4wv
        xujzCFtiAMCefSTuF6rTo2O5sRl9PmErDADYo0/FfUP1Wt5I6KYYfV5hCwwA2JMvxANDdfuF8DMBbJUB
        AHvymFD9lh8MHH1+oToDAPbguaFttPx2gF8RZIsMANixf4rbh7bTPcObBbE1BgDs0PK+/g8Iba/lHQNH
        n3OoygCAHVr+Lr222Xnxrhh93qEiAwB25HNx19B2W/6A0OhzDxUZALAjzwltv7+J0ecfqjEAYAduiAtD
        2+9hMfoagGoMANiBl4X69N4YfR1AJQYA7MByKlSfLovR1wFUYgDApOWP/Zwf6tO9w1sEU50BAJP86l/P
        ljd8Gn09QBUGAEx6fKhfl8fo6wGqMABgwnINfI9Qv5Y/Fzz6moAqDACY8J+hnt0tRl8TUIUBABPeEOrb
        p2P0dQEVGAAwwZ/97d07Y/R1ARUYADDh0lDfXhGjrwuowACACZeE+vaiGH1dQAUGAEx4QqhvfhWQygwA
        mPCzob49K0ZfF1CBAQATHhXq2zNj9HUBFRgAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOg
        dwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpn
        AFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYA
        lRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZ
        AQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkA
        MMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQAT
        DIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA
        6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDe
        GQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0B
        QGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBU
        ZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUG
        AEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDA
        BAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEww
        AHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOg
        dwYAlRkAMMEA6J0BQGUGAEwwAHpnAFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpn
        AFCZAQATDIDeGQBUZgDABAOgdwYAlRkAMMEA6J0BQGUGAEwwAHpnAFDZ0QfADTF6MKjAAOidAUBlRx8A
        /x2jB4MKDIDeGQBU9qY4ah+K0YNBBQZA7wwAKntNHLX3xOjBoAIDoHcGAJW9OI7au2L0YFCBAdA7A4DK
        nhdH7eoYPRhUYAD0zgCgsmfHUXtBjB4MKjAAemcAUNmT46j9WoweDCowAHpnAFDZxXHUHh6jB4MKDIDe
        GQBUdpc4at8ToweDCgyA3hkAVPWJOHrnhTcDoioDoHcGAFW9OVbRlTF6QFg7A6B3BgBVXRaryA8CUpUB
        0DsDgKoeEKvoR2P0gLB2BkDvDAAqui4uiFV0bnwsRg8Ka2YA9M4AoKLXxaryhkBUZAD0zgCgoifFqlr+
        f8ToQWHNDIDeGQBUc318e6yuf43RA8NaGQC9MwCo5mWxypZfSxg9MKyVAdA7A4BqHhqr7KK4MUYPDWtk
        APTOAKCSD8T5sdquiNGDwxoZAL0zAKjkklh13xs3xejhYW0MgN4ZAFTxobh9rL6XxugDgLUxAHpnAFDF
        r0aJ7hNuAajAAOidAUAFH45viTI9J0YfCKyJAdA7A4AKHhel+tb4YIw+GFgLA6B3BgBrd3WU7DEx+oBg
        LQyA3hkArNnya/U/FGW7MkYfGKyBAdA7A4A1e0aU7s7hfwWwVgZA7wwA1uptseo3/Tlp948vxuiDhGMy
        AHpnALBGH48LYzM9PUYfKByTAdA7A4C1+XL8TGyqc+OVMfqA4VgMgN4ZAKzNpbHJLoirYvRBwzEYAL0z
        AFiT58amW94f4O0x+uDh0AyA3hkArMXL47zYfHeP98ToRYBDMgB6ZwCwBq+L5Ya8TcuvB/5DjF4MOBQD
        oHcGAMf2smj1zf+r3SFeH6MXBQ7BAOidAcAx/XG0uPY/VcvyeUmMXhzYNwOgdwYAx7D8qt9mf9r/bHpi
        XB+jFwv2xQDonQHAoX0iHha6VT8e74vRiwb7YAD0zgDgkJa3993UO/ztujvFi+PmGL2AsEsGQO8MAA7h
        hlj+sM8m3tv/ED04/iVGLybsigHQOwOAfXtr/HDoDFt+QPA34/MxemFhlgHQOwOAfflwPC402V3jWXFt
        jF5oOFsGQO8MAHbtY7H88bvlXW+1w5afD1he2E/H6IWHM2UA9M4AYFc+GE+Lbw7tseUFfmy8Nm6K0ScD
        TsIA6J0BwIz/iVfF8u/I7UIHbvmViuUNFf42bozRJwlOxQDonQHAmboulvfuf1Ist9JaSctbCz88/ije
        GcsnavQJhK8yAHpnAHA6n4w3x2VxcTjpF+qi+On45fj9eGEsf3bxynhLvJvWHhTq2y/F6OuCPt4Yr47l
        LemfH78bT47lm/1dQpIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkde2c
        c/4PM2oisCV85DwAAAAASUVORK5CYII=
</value>
  </data>
</root>